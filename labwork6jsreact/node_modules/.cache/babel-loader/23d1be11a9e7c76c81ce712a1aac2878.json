{"ast":null,"code":"var _jsxFileName = \"/Users/egormartinovich/labwork6jsreact/src/components/Note.jsx\";\nimport React from \"react\";\nimport Notes from \"./Notes\";\nimport \"../index.css\";\nimport InputMask from \"react-input-mask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Note extends React.Component {\n  constructor() {\n    super();\n\n    this.handleInput = () => {\n      const val = this.headInput.value;\n      const text = this.textar.value;\n      const date = this.date.value;\n      this.form.reset();\n\n      if (date === \"\") {\n        this.setState(prevState => ({\n          header: [...prevState.header, val],\n          text: [...prevState.text, text],\n          count: this.state.count + 1,\n          date: [...prevState.date, new Date().toLocaleDateString()]\n        }));\n      } else {\n        this.setState(prevState => ({\n          header: [...prevState.header, val],\n          text: [...prevState.text, text],\n          count: this.state.count + 1,\n          date: [...prevState.date, date]\n        }));\n      }\n    };\n\n    this.deleteNote = e => {\n      if (e.target.name == \"firstDelete\") {\n        let copyHeader = Object.assign([], this.state.header);\n        let index = 0;\n        this.setState(prevState => ({\n          header: Object.assign([], this.state.header).splice(0, 1),\n          count: this.state.count - 1\n        }));\n      } else if (e.target.name == \"lastDelete\") {}\n    };\n\n    this.state = {\n      header: [],\n      date: [],\n      text: [],\n      count: 0\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteNote = this.deleteNote.bind(this);\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          width: \"fit-content\"\n        },\n        ref: e => this.form = e,\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Заметки\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Заголовок\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"header\",\n            ref: e => this.headInput = e\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Дата\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n            type: \"text\",\n            name: \"date\",\n            ref: e => this.date = e,\n            mask: \"99.99.9999\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Содержание\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"text\",\n            ref: e => this.textar = e\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: this.handleInput,\n            children: \"Добавить Заметку\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), this.state.count > 3 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              name: \"firstDelete\",\n              onClick: this.deleteNote,\n              children: \"Удалить первую заметку\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              name: \"lastDelete\",\n              children: \"Удалить последнюю заметку\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Notes, {\n          header: this.state.header,\n          text: this.state.text,\n          count: this.state.count,\n          date: this.state.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/egormartinovich/labwork6jsreact/src/components/Note.jsx"],"names":["React","Notes","InputMask","Note","Component","constructor","handleInput","val","headInput","value","text","textar","date","form","reset","setState","prevState","header","count","state","Date","toLocaleDateString","deleteNote","e","target","name","copyHeader","Object","assign","index","splice","bind","render","console","log","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Notes from \"./Notes\";\nimport \"../index.css\";\nimport InputMask from \"react-input-mask\";\nexport default class Note extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      header: [],\n      date: [],\n\n      text: [],\n      count: 0,\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteNote = this.deleteNote.bind(this);\n  }\n  handleInput = () => {\n    const val = this.headInput.value;\n    const text = this.textar.value;\n    const date = this.date.value;\n    this.form.reset();\n    if (date === \"\") {\n      this.setState((prevState) => ({\n        header: [...prevState.header, val],\n        text: [...prevState.text, text],\n        count: this.state.count + 1,\n        date: [...prevState.date, new Date().toLocaleDateString()],\n      }));\n    } else {\n      this.setState((prevState) => ({\n        header: [...prevState.header, val],\n        text: [...prevState.text, text],\n        count: this.state.count + 1,\n        date: [...prevState.date, date],\n      }));\n    }\n  };\n  deleteNote = (e) => {\n    if (e.target.name == \"firstDelete\") {\n      let copyHeader = Object.assign([], this.state.header);\n      let index = 0;\n      this.setState((prevState) => ({\n        header: Object.assign([], this.state.header).splice(0, 1),\n        count: this.state.count - 1,\n      }));\n    } else if (e.target.name == \"lastDelete\") {\n    }\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <form style={{ width: \"fit-content\" }} ref={(e) => (this.form = e)}>\n          <fieldset>\n            <legend>{\"Заметки\"}</legend>\n            <label>{\"Заголовок\"}</label>\n            <input\n              type={\"text\"}\n              name={\"header\"}\n              ref={(e) => (this.headInput = e)}\n            ></input>\n            <label>{\"Дата\"}</label>\n            <InputMask\n              type={\"text\"}\n              name={\"date\"}\n              ref={(e) => (this.date = e)}\n              mask={\"99.99.9999\"}\n            ></InputMask>\n            <label>{\"Содержание\"}</label>\n            <textarea name=\"text\" ref={(e) => (this.textar = e)}></textarea>\n            <button type={\"button\"} onClick={this.handleInput}>\n              {\"Добавить Заметку\"}\n            </button>\n            {this.state.count > 3 ? (\n              <span>\n                <button\n                  type={\"button\"}\n                  name={\"firstDelete\"}\n                  onClick={this.deleteNote}\n                >\n                  {\"Удалить первую заметку\"}\n                </button>\n                <button type={\"button\"} name={\"lastDelete\"}>\n                  {\"Удалить последнюю заметку\"}\n                </button>\n              </span>\n            ) : null}\n          </fieldset>\n        </form>\n        <div>\n          <Notes\n            header={this.state.header}\n            text={this.state.text}\n            count={this.state.count}\n            date={this.state.date}\n          ></Notes>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}