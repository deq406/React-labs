{"ast":null,"code":"var _jsxFileName = \"/Users/egormartinovich/labwork6jsreact/src/components/StudentInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport StudentInfoHandler from \"./StudentInfoHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst emails = [\"ru\", \"com\", \"by\"];\nexport default function StudentInfo(props) {\n  _s();\n\n  const [info, setStudentInfo] = useState({\n    FIO: \"Default\",\n    dateOfBirth: 1,\n    universityEntranceDate: 1,\n    faculty: \"\",\n    group: 1,\n    spec: \"\",\n    email: \"\",\n    telNumber: 1,\n    submitState: false\n  });\n\n  const update = e => {\n    setStudentInfo({ ...info,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    console.log(info);\n    setStudentInfo({ ...info,\n      submitState: true\n    });\n  };\n\n  const email = useRef(null);\n\n  const isNormalEmail = () => {\n    var secondResult = false;\n    const re = /^[\\w-\\.]+@[\\w-]+\\.[\\w-]{2,4}$/i;\n    const result = re.test(email.current.value);\n    console.log(email.current.value);\n    console.log(result);\n    emails.map(val => {\n      if (email.includes(val)) {\n        secondResult = true;\n        return secondResult;\n      }\n    });\n    let endResult = result && secondResult;\n    console.log(endResult);\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          width: \"fit-content\"\n        },\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Новый Студент\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"FIO\",\n            children: \"ФИО:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"FIO\",\n            onChange: update\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dateOfBirth\",\n            children: \"Дата рождения:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n            mask: \"99.99.9999\",\n            id: \"dateOfBirth\",\n            onChange: update\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"universityEntranceDate\",\n            children: \"Год поступления:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"universityEntranceDate\",\n            onChange: update\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"faculty\",\n            children: \"Факультет:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"faculty\",\n            onChange: update\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"group\",\n            children: \"Группа:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"group\",\n            onChange: update\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"spec\",\n            children: \"Специальность\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"spec\",\n            onChange: update\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            onChange: update,\n            onInput: isNormalEmail,\n            ref: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"telNumber\",\n            children: \"Номер телефона:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n            mask: \"999(99)999-99-99\",\n            id: \"telNumber\",\n            onChange: update\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"Submit\",\n            value: \"Submit\",\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: info.submitState === true ? /*#__PURE__*/_jsxDEV(StudentInfoHandler, {\n        FIO: info.FIO,\n        dateOfBirth: info.dateOfBirth,\n        universityEntranceDate: info.universityEntranceDate,\n        faculty: info.faculty,\n        group: info.group,\n        spec: info.spec,\n        email: info.email,\n        telNumber: info.telNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(StudentInfo, \"9IFXiGRIDjsZGT0n79wXFa/52EM=\");\n\n_c = StudentInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentInfo\");","map":{"version":3,"sources":["/Users/egormartinovich/labwork6jsreact/src/components/StudentInfo.jsx"],"names":["React","useState","useRef","InputMask","StudentInfoHandler","emails","StudentInfo","props","info","setStudentInfo","FIO","dateOfBirth","universityEntranceDate","faculty","group","spec","email","telNumber","submitState","update","e","target","id","value","handleSubmit","console","log","isNormalEmail","secondResult","re","result","test","current","map","val","includes","endResult","width"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport StudentInfoHandler from \"./StudentInfoHandler\";\nconst emails = [\"ru\", \"com\", \"by\"];\nexport default function StudentInfo(props) {\n  const [info, setStudentInfo] = useState({\n    FIO: \"Default\",\n    dateOfBirth: 1,\n    universityEntranceDate: 1,\n    faculty: \"\",\n    group: 1,\n    spec: \"\",\n    email: \"\",\n    telNumber: 1,\n    submitState: false,\n  });\n  const update = (e) => {\n    setStudentInfo({ ...info, [e.target.id]: e.target.value });\n  };\n  const handleSubmit = (e) => {\n    console.log(info);\n    setStudentInfo({ ...info, submitState: true });\n  };\n  const email = useRef(null);\n  const isNormalEmail = () => {\n    var secondResult = false;\n    const re = /^[\\w-\\.]+@[\\w-]+\\.[\\w-]{2,4}$/i;\n    const result = re.test(email.current.value);\n    console.log(email.current.value);\n    console.log(result);\n    emails.map((val) => {\n      if (email.includes(val)) {\n        secondResult = true;\n        return secondResult;\n      }\n    });\n    let endResult = result && secondResult;\n    console.log(endResult);\n    return result;\n  };\n\n  return (\n    <>\n      <div>\n        <form style={{ width: \"fit-content\" }} onSubmit={handleSubmit}>\n          <fieldset>\n            <legend>{\"Новый Студент\"}</legend>\n            <label htmlFor=\"FIO\">{\"ФИО:\"}</label>\n            <input type={\"text\"} id=\"FIO\" onChange={update}></input>\n            <label htmlFor=\"dateOfBirth\">{\"Дата рождения:\"}</label>\n            <InputMask\n              mask=\"99.99.9999\"\n              id=\"dateOfBirth\"\n              onChange={update}\n            ></InputMask>\n            <label htmlFor=\"universityEntranceDate\">{\"Год поступления:\"}</label>\n            <input\n              type={\"text\"}\n              id=\"universityEntranceDate\"\n              onChange={update}\n            ></input>\n            <label htmlFor=\"faculty\">{\"Факультет:\"}</label>\n            <input type={\"text\"} id={\"faculty\"} onChange={update}></input>\n            <label htmlFor=\"group\">{\"Группа:\"}</label>\n            <input type={\"text\"} id={\"group\"} onChange={update}></input>\n            <label htmlFor=\"spec\">{\"Специальность\"}</label>\n            <input type={\"text\"} id={\"spec\"} onChange={update}></input>\n            <label htmlFor=\"email\">{\"Email:\"}</label>\n            <input\n              type={\"email\"}\n              id=\"email\"\n              onChange={update}\n              onInput={isNormalEmail}\n              ref={email}\n            ></input>\n            <label htmlFor=\"telNumber\">{\"Номер телефона:\"}</label>\n            <InputMask\n              mask=\"999(99)999-99-99\"\n              id=\"telNumber\"\n              onChange={update}\n            ></InputMask>\n            <input\n              type={\"Submit\"}\n              value={\"Submit\"}\n              onClick={handleSubmit}\n            ></input>\n          </fieldset>\n        </form>\n      </div>\n      <div>\n        {info.submitState === true ? (\n          <StudentInfoHandler\n            FIO={info.FIO}\n            dateOfBirth={info.dateOfBirth}\n            universityEntranceDate={info.universityEntranceDate}\n            faculty={info.faculty}\n            group={info.group}\n            spec={info.spec}\n            email={info.email}\n            telNumber={info.telNumber}\n          />\n        ) : null}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}