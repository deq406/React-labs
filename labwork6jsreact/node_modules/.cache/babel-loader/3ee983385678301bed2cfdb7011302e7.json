{"ast":null,"code":"const Operators = {\n  A1: [\"375(29)1\", \"375(29)3\", \"375(29)6\", \"375(29)9\", \"375(44)\"],\n  MTC: [\"375(29)2\", \"375(29)5\", \"375(29)7\", \"375(29)8\", \"375(33)\"],\n  life: [\"375(25)\"],\n  Городской: [\"375(17)\"]\n};\nexport function birthDate(year, month, day) {\n  var now = new Date();\n  var today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  var dob = new Date(year, month, day);\n  var dobnow = new Date(today.getFullYear(), dob.getMonth(), dob.getDate());\n  var age = today.getFullYear() - dob.getFullYear();\n  if (today < dobnow) age = age - 1;\n  return age;\n}\nexport function course(entranceYear) {\n  var now = new Date().getFullYear();\n  var course = now - entranceYear;\n  return course > 4 ? \"окончил университет\" : course;\n}\nexport function EmailCom(email) {\n  for (let counter = 0; counter < email.length; counter++) {\n    if (email[counter] === \"@\") {\n      var oper = email.slice(counter + 1, email.length);\n    }\n  }\n\n  return oper;\n}\n_c = EmailCom;\nexport function OperNumber(telNumber) {\n  var numb = telNumber.toString();\n  /*Object.keys(Operators).map((key) => {\n    for (let i = 0; i < Operators[key].length; i++) {\n      if (numb.includes(Operators[key][i])) {\n        var result = key.toString();\n        console.log(result);\n        return result;  \n      }\n    }\n    console.log(result);\n  });*/\n\n  for (let i = 0; i < Operators.A1.length; i++) {\n    if (numb.includes(Operators.A1[i])) return \"A1(VELCOM)\";\n  }\n\n  for (let i = 0; i < Operators.MTC.length; i++) {\n    if (numb.includes(Operators.MTC[i])) return \"MTC\";\n  }\n\n  for (let i = 0; i < Operators.life.length; i++) {\n    if (numb.includes(Operators.life[i])) return \"life\";\n  }\n\n  for (let i = 0; i < Operators.Городской.length; i++) {\n    if (numb.includes(Operators.Городской[i])) return \"Городской\";\n  }\n}\n_c2 = OperNumber;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EmailCom\");\n$RefreshReg$(_c2, \"OperNumber\");","map":{"version":3,"sources":["/Users/egormartinovich/labwork6jsreact/src/components/Info.js"],"names":["Operators","A1","MTC","life","Городской","birthDate","year","month","day","now","Date","today","getFullYear","getMonth","getDate","dob","dobnow","age","course","entranceYear","EmailCom","email","counter","length","oper","slice","OperNumber","telNumber","numb","toString","i","includes"],"mappings":"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","sourcesContent":["const Operators = {\n  A1: [\"375(29)1\", \"375(29)3\", \"375(29)6\", \"375(29)9\", \"375(44)\"],\n  MTC: [\"375(29)2\", \"375(29)5\", \"375(29)7\", \"375(29)8\", \"375(33)\"],\n  life: [\"375(25)\"],\n  Городской: [\"375(17)\"],\n};\nexport function birthDate(year, month, day) {\n  var now = new Date();\n  var today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  var dob = new Date(year, month, day);\n  var dobnow = new Date(today.getFullYear(), dob.getMonth(), dob.getDate());\n  var age = today.getFullYear() - dob.getFullYear();\n  if (today < dobnow) age = age - 1;\n  return age;\n}\nexport function course(entranceYear) {\n  var now = new Date().getFullYear();\n  var course = now - entranceYear;\n  return course > 4 ? \"окончил университет\" : course;\n}\nexport function EmailCom(email) {\n  for (let counter = 0; counter < email.length; counter++) {\n    if (email[counter] === \"@\") {\n      var oper = email.slice(counter + 1, email.length);\n    }\n  }\n  return oper;\n}\nexport function OperNumber(telNumber) {\n  var numb = telNumber.toString();\n  /*Object.keys(Operators).map((key) => {\n    for (let i = 0; i < Operators[key].length; i++) {\n      if (numb.includes(Operators[key][i])) {\n        var result = key.toString();\n        console.log(result);\n        return result;  \n      }\n    }\n    console.log(result);\n  });*/\n\n  for (let i = 0; i < Operators.A1.length; i++) {\n    if (numb.includes(Operators.A1[i])) return \"A1(VELCOM)\";\n  }\n  for (let i = 0; i < Operators.MTC.length; i++) {\n    if (numb.includes(Operators.MTC[i])) return \"MTC\";\n  }\n\n  for (let i = 0; i < Operators.life.length; i++) {\n    if (numb.includes(Operators.life[i])) return \"life\";\n  }\n  for (let i = 0; i < Operators.Городской.length; i++) {\n    if (numb.includes(Operators.Городской[i])) return \"Городской\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}