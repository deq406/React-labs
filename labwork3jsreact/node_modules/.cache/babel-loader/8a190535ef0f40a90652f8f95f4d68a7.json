{"ast":null,"code":"var _jsxFileName = \"/Users/egormartinovich/labwork3jsreact/src/components/SortTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SortTable = () => {\n  _s();\n\n  const FoodList1 = [{\n    Name: \"Butter\",\n    Price: 0.9,\n    Stock: 77\n  }, {\n    Name: \"Milk\",\n    Price: 1.9,\n    Stock: 45\n  }];\n  const FoodList2 = [{\n    Name: \"Butter\",\n    Price: 0.9,\n    Stock: 77\n  }, {\n    Name: \"Yoghurt\",\n    Price: 2.4,\n    Stock: 12\n  }, {\n    Name: \"Milk\",\n    Price: 1.9,\n    Stock: 45\n  }, {\n    Name: \"Pasta\",\n    Price: 3.2,\n    Stock: 24\n  }, {\n    Name: \"Bread\",\n    Price: 2.9,\n    Stock: 2\n  }];\n  const FoodList3 = [];\n  const Width = {\n    width: \"50px\"\n  };\n  let [FoodList, setFoodList] = useState(FoodList2);\n  let [SortName, setSortName] = useState(false);\n  let [SortPrice, setSortPrice] = useState(false);\n  let [SortStock, setSortStock] = useState(false); //для обратной сортировки\n\n  let [SortName2, setSortName2] = useState(false);\n  let [SortPrice2, setSortPrice2] = useState(false);\n  let [SortStock2, setSortStock2] = useState(false);\n  let [colour, setcolour] = useState({\n    backgroundColor: \"white\"\n  });\n  FoodList2.map((val, index) => {\n    if (val.stock < 3) {\n      val.stock.style.backgroundColor = \"yellow\";\n    }\n  });\n\n  if (FoodList.length == 0) {\n    colour = {\n      backgroundColor: \"red\"\n    };\n  }\n\n  function Table() {\n    if (SortName) {\n      setSortName(false);\n      FoodList.sort(function (a, b) {\n        let nameA = a.Name.toLowerCase(); // ignore upper and lowercase\n\n        let nameB = b.Name.toLowerCase(); // ignore upper and lowercase\n\n        /*return nameA - nameB*/\n\n        if (nameA < nameB) {\n          return -1;\n        }\n\n        if (nameA > nameB) {\n          return 1;\n        } // names must be equal\n\n\n        return 0;\n      });\n\n      if (SortName2) {\n        setSortName2(false);\n      } else {\n        setSortName2(true);\n        FoodList.reverse();\n      }\n    }\n\n    if (SortPrice) {\n      setSortPrice(false);\n      FoodList.sort(function (a, b) {\n        return a.Price - b.Price;\n      });\n\n      if (SortPrice2) {\n        setSortPrice2(false);\n      } else {\n        setSortPrice2(true);\n        FoodList.reverse();\n      }\n    }\n\n    if (SortStock) {\n      setSortStock(false);\n      FoodList.sort(function (a, b) {\n        return a.Stock - b.Stock;\n      });\n\n      if (SortStock2) {\n        setSortStock2(false);\n      } else {\n        setSortStock2(true);\n        FoodList.reverse();\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: FoodList.map((food, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          style: Width,\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: food.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: food.Price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: food.Stock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"foodTable\",\n    style: colour,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"ID\",\n        value: \"Num\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: \"Name\",\n        className: \"main\",\n        onClick: e => {\n          setSortName(true);\n        },\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: \"Price\",\n        className: \"main\",\n        onClick: e1 => {\n          setSortPrice(true);\n        },\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: \"In Stock\",\n        className: \"main\",\n        onClick: e2 => {\n          setSortStock(true);\n        },\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), Table()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SortTable, \"LliVoWXUqOPWO+hwbsfvNFGuEs8=\");\n\n_c = SortTable;\nexport default SortTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortTable\");","map":{"version":3,"sources":["/Users/egormartinovich/labwork3jsreact/src/components/SortTable.jsx"],"names":["React","useState","SortTable","FoodList1","Name","Price","Stock","FoodList2","FoodList3","Width","width","FoodList","setFoodList","SortName","setSortName","SortPrice","setSortPrice","SortStock","setSortStock","SortName2","setSortName2","SortPrice2","setSortPrice2","SortStock2","setSortStock2","colour","setcolour","backgroundColor","map","val","index","stock","style","length","Table","sort","a","b","nameA","toLowerCase","nameB","reverse","food","e","e1","e2"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst SortTable = () => {\n  const FoodList1 = [\n    {\n      Name: \"Butter\",\n      Price: 0.9,\n      Stock: 77,\n    },\n    {\n      Name: \"Milk\",\n      Price: 1.9,\n      Stock: 45,\n    },\n  ];\n  const FoodList2 = [\n    {\n      Name: \"Butter\",\n      Price: 0.9,\n      Stock: 77,\n    },\n    {\n      Name: \"Yoghurt\",\n      Price: 2.4,\n      Stock: 12,\n    },\n    {\n      Name: \"Milk\",\n      Price: 1.9,\n      Stock: 45,\n    },\n    {\n      Name: \"Pasta\",\n      Price: 3.2,\n      Stock: 24,\n    },\n    {\n      Name: \"Bread\",\n      Price: 2.9,\n      Stock: 2,\n    },\n  ];\n  const FoodList3 = [];\n  const Width = {\n    width: \"50px\",\n  };\n  let [FoodList, setFoodList] = useState(FoodList2);\n\n  let [SortName, setSortName] = useState(false);\n  let [SortPrice, setSortPrice] = useState(false);\n  let [SortStock, setSortStock] = useState(false);\n\n  //для обратной сортировки\n  let [SortName2, setSortName2] = useState(false);\n  let [SortPrice2, setSortPrice2] = useState(false);\n  let [SortStock2, setSortStock2] = useState(false);\n\n  let [colour, setcolour] = useState({ backgroundColor: \"white\" });\n\n  FoodList2.map((val, index) => {\n    if (val.stock < 3) {\n      val.stock.style.backgroundColor = \"yellow\";\n    }\n  });\n  if (FoodList.length == 0) {\n    colour = { backgroundColor: \"red\" };\n  }\n\n  function Table() {\n    if (SortName) {\n      setSortName(false);\n      FoodList.sort(function (a, b) {\n        let nameA = a.Name.toLowerCase(); // ignore upper and lowercase\n        let nameB = b.Name.toLowerCase(); // ignore upper and lowercase\n        /*return nameA - nameB*/\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        // names must be equal\n        return 0;\n      });\n\n      if (SortName2) {\n        setSortName2(false);\n      } else {\n        setSortName2(true);\n        FoodList.reverse();\n      }\n    }\n    if (SortPrice) {\n      setSortPrice(false);\n      FoodList.sort(function (a, b) {\n        return a.Price - b.Price;\n      });\n\n      if (SortPrice2) {\n        setSortPrice2(false);\n      } else {\n        setSortPrice2(true);\n        FoodList.reverse();\n      }\n    }\n    if (SortStock) {\n      setSortStock(false);\n      FoodList.sort(function (a, b) {\n        return a.Stock - b.Stock;\n      });\n\n      if (SortStock2) {\n        setSortStock2(false);\n      } else {\n        setSortStock2(true);\n        FoodList.reverse();\n      }\n    }\n    return (\n      <table>\n        {FoodList.map((food, index) => (\n          <>\n            <tr style={Width}>{index + 1}</tr>\n            <tr>{food.Name}</tr>\n            <tr>{food.Price}</tr>\n            <tr>{food.Stock}</tr>\n          </>\n        ))}\n      </table>\n    );\n  }\n\n  return (\n    <div className=\"foodTable\" style={colour}>\n      <form action=\"\">\n        <input className=\"ID\" value=\"Num\" readOnly />\n        <input\n          type=\"text\"\n          value=\"Name\"\n          className=\"main\"\n          onClick={(e) => {\n            setSortName(true);\n          }}\n          readOnly\n        />\n        <input\n          type=\"text\"\n          value=\"Price\"\n          className=\"main\"\n          onClick={(e1) => {\n            setSortPrice(true);\n          }}\n          readOnly\n        />\n        <input\n          type=\"text\"\n          value=\"In Stock\"\n          className=\"main\"\n          onClick={(e2) => {\n            setSortStock(true);\n          }}\n          readOnly\n        />\n      </form>\n      {Table()}\n    </div>\n  );\n};\n\nexport default SortTable;\n"]},"metadata":{},"sourceType":"module"}