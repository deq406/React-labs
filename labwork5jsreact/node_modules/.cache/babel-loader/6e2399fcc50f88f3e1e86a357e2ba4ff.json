{"ast":null,"code":"var _jsxFileName = \"/Users/egormartinovich/labwork5jsreact/src/components/PhoneInput.jsx\";\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class PhoneInput extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      number: \"\",\n      showTheList: false,\n      value: \"Беларусь\",\n      img: \"/images/bel.jpg\",\n      mask: \"XXXX (XX) XXX-XX-XX\",\n      count: 13\n    };\n    this.inputs = [{\n      value: \"Беларусь\",\n      code: \"+375\",\n      img: \"/images/bel.jpg\",\n      mask: \"XXXX (XX) XXX-XX-XX\",\n      count: 13\n    }, {\n      value: \"Украина\",\n      code: \"+380\",\n      img: \"/images/uk.png\",\n      mask: \"XXXX (XX) XXX-XX-XX\",\n      count: 13\n    }, {\n      value: \"Россия\",\n      code: \"+7\",\n      img: \"/images/rus.png\",\n      mask: \"XX (XXX) XXX-XX-XX\",\n      count: 12\n    }, {\n      value: \"Польша\",\n      code: \"+48\",\n      img: \"/images/poland.png\",\n      mask: \"XXX XXX-XXX-XXX\",\n      count: 12\n    }, {\n      value: \"Литва\",\n      code: \"+370\",\n      img: \"/images/lithuania.png\",\n      mask: \"XXXX (XX) XXX-XX-XX\",\n      count: 13\n    }, {\n      value: \"Латвия\",\n      code: \"+371\",\n      img: \"/images/latvia.png\",\n      mask: \"XXXX XXXX-XXXX\",\n      count: 12\n    }, {\n      value: \"Канада\",\n      code: \"+1\",\n      img: \"/images/canada.jpg\",\n      mask: \"XX XXX XXXX-XXXX\",\n      count: 12\n    }];\n\n    this.handleNumberChange = e => {\n      this.setState({\n        number: e.target.value\n      }, () => {\n        this.inputs.forEach(item => {\n          if (this.state.number === item.code) this.setState({\n            value: item.value,\n            img: item.img,\n            mask: item.mask,\n            count: item.count\n          });\n        });\n\n        if (this.state.count === this.state.number.length) {\n          let maskArr = this.state.mask.split(\"\"),\n              numberArr = this.state.number.split(\"\");\n\n          for (let i = 0, j = 0; i < maskArr.length; i++) if (maskArr[i] === \"X\") {\n            maskArr[i] = numberArr[j];\n            j++;\n          }\n\n          let number = maskArr.join(\"\");\n          this.setState({\n            number: number\n          });\n        }\n      });\n    };\n  }\n\n  theList() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.inputs.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => this.setState({\n            number: item.code,\n            showTheList: false,\n            img: item.img,\n            mask: item.mask,\n            count: item.count\n          }) // key={item.value}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.img,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"country\",\n              value: item.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), item.value, item.code]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n  numberField() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.img,\n          style: {\n            height: \"15px\",\n            width: \"30px\"\n          },\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: () => this.setState({\n            showTheList: !this.state.showTheList\n          }),\n          id: \"number\",\n          type: \"tel\",\n          name: \"myPhone\",\n          placeholder: \"+375 (33) 000-00-00\",\n          value: this.state.number,\n          onChange: this.handleNumberChange,\n          maxLength: this.state.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.numberField(), this.state.showTheList ? this.theList() : null]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/egormartinovich/labwork5jsreact/src/components/PhoneInput.jsx"],"names":["React","Component","PhoneInput","state","number","showTheList","value","img","mask","count","inputs","code","handleNumberChange","e","setState","target","forEach","item","length","maskArr","split","numberArr","i","j","join","theList","map","numberField","height","width","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./index.css\";\n\nexport class PhoneInput extends Component {\n  state = {\n    number: \"\",\n    showTheList: false,\n    value: \"Беларусь\",\n    img: \"/images/bel.jpg\",\n    mask: \"XXXX (XX) XXX-XX-XX\",\n    count: 13,\n  };\n  inputs = [\n    {\n      value: \"Беларусь\",\n      code: \"+375\",\n      img: \"/images/bel.jpg\",\n      mask: \"XXXX (XX) XXX-XX-XX\",\n      count: 13,\n    },\n    {\n      value: \"Украина\",\n      code: \"+380\",\n      img: \"/images/uk.png\",\n      mask: \"XXXX (XX) XXX-XX-XX\",\n      count: 13,\n    },\n    {\n      value: \"Россия\",\n      code: \"+7\",\n      img: \"/images/rus.png\",\n      mask: \"XX (XXX) XXX-XX-XX\",\n      count: 12,\n    },\n    {\n      value: \"Польша\",\n      code: \"+48\",\n      img: \"/images/poland.png\",\n      mask: \"XXX XXX-XXX-XXX\",\n      count: 12,\n    },\n    {\n      value: \"Литва\",\n      code: \"+370\",\n      img: \"/images/lithuania.png\",\n      mask: \"XXXX (XX) XXX-XX-XX\",\n      count: 13,\n    },\n    {\n      value: \"Латвия\",\n      code: \"+371\",\n      img: \"/images/latvia.png\",\n      mask: \"XXXX XXXX-XXXX\",\n      count: 12,\n    },\n    {\n      value: \"Канада\",\n      code: \"+1\",\n      img: \"/images/canada.jpg\",\n      mask: \"XX XXX XXXX-XXXX\",\n      count: 12,\n    },\n  ];\n  theList() {\n    return (\n      <ul>\n        {this.inputs.map((item) => {\n          return (\n            <li\n              onClick={() =>\n                this.setState({\n                  number: item.code,\n                  showTheList: false,\n                  img: item.img,\n                  mask: item.mask,\n                  count: item.count,\n                })\n              }\n              // key={item.value}\n            >\n              <img src={item.img} alt=\"\" />\n              <label>\n                <input type=\"radio\" name=\"country\" value={item.value} />\n                {item.value}\n                {item.code}\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n\n  numberField() {\n    return (\n      <>\n        <label>\n          <img\n            src={this.state.img}\n            style={{\n              height: \"15px\",\n              width: \"30px\",\n            }}\n            alt=\"\"\n          />\n          <input\n            onClick={() =>\n              this.setState({ showTheList: !this.state.showTheList })\n            }\n            id=\"number\"\n            type=\"tel\"\n            name=\"myPhone\"\n            placeholder=\"+375 (33) 000-00-00\"\n            value={this.state.number}\n            onChange={this.handleNumberChange}\n            maxLength={this.state.count}\n          />\n        </label>\n      </>\n    );\n  }\n  handleNumberChange = (e) => {\n    this.setState(\n      {\n        number: e.target.value,\n      },\n      () => {\n        this.inputs.forEach((item) => {\n          if (this.state.number === item.code)\n            this.setState({\n              value: item.value,\n              img: item.img,\n              mask: item.mask,\n              count: item.count,\n            });\n        });\n\n        if (this.state.count === this.state.number.length) {\n          let maskArr = this.state.mask.split(\"\"),\n            numberArr = this.state.number.split(\"\");\n          for (let i = 0, j = 0; i < maskArr.length; i++)\n            if (maskArr[i] === \"X\") {\n              maskArr[i] = numberArr[j];\n              j++;\n            }\n          let number = maskArr.join(\"\");\n          this.setState({ number: number });\n        }\n      }\n    );\n  };\n  render() {\n    return (\n      <>\n        {this.numberField()}\n        {this.state.showTheList ? this.theList() : null}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}